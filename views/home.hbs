<!DOCTYPE html>
<html>
  <head>

<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css">
<link rel="stylesheet" type="text/css" href="/styles.css">
<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

<h1>HOME!! </h1>

<div class="container">
  <form class="search" id="search" action="/schools" accept-charset="UTF-8" method="post">
    <p>
      <input placeholder="enter school name" type="text" name="name" id="input1" /><br><br>
      <input value="click for schools" type="submit" id="find"></input>
      </p>
  </form>
</div>
<div role="main" class="ui-content">
    <button id="getGeolocation">get geolocation</button>
</div>


    <style>
        #map {
        height: 500px;
        width: 500px;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
<script>

var map;
var infoWindow;
var service;
var currentLat;
var currentLong;
var $ = require('jquery') // does not work in views

var clickForLocation = document.getElementById("geoLocation")

function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    // center: {lat: currentLat, lng: currentLong},
    zoom: 15,
    styles: [{
      stylers: [{ visibility: 'simplified' }]
    }, {
      elementType: 'labels',
      stylers: [{ visibility: 'on' }]
    }]
  });

if (navigator.geolocation) { /// start of geolocator
          navigator.geolocation.getCurrentPosition(function(position) {
            currentLat = position.coords.latitude
            currentLong = position.coords.longitude
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            map.setCenter(pos);
            console.log(pos, "current positon")
            console.log(currentLat, "current Lat")
            console.log(currentLong, "current Long")
          });
        }  //end of

    // The idle event is a debounced event, so we can query & listen without
  // throwing too many requests at the server.
}

global.initMap = initMap

function showPosition(position) {
    clickForLocation.innerHTML = "Latitude: " + position.coords.latitude +
    "<br>Longitude: " + position.coords.longitude;
}


</script>
    <script src ="/bundle.js"> </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaKgR9OOeCwqez-NGNGNtIA7d4JjODHfg&callback=initMap">
        </script>
  </body>
</html>
